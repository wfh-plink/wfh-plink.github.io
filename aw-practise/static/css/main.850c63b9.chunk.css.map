{"version":3,"sources":["webpack://../packages/aw-main/index.scss","webpack://../dr-comp-package/doc-app/doc-ui-common/client/components/AppLayout.module.scss","webpack://node_modules/@material/linear-progress/_keyframes.scss","webpack://node_modules/@material/theme/_css.scss","webpack://node_modules/@material/linear-progress/_mixins.scss","webpack://node_modules/@material/linear-progress/_variables.scss","webpack://node_modules/@material/top-app-bar/mdc-top-app-bar.scss","webpack://node_modules/@material/top-app-bar/_mixins.scss","webpack://node_modules/@material/ripple/_ripple-theme.scss","webpack://node_modules/@material/top-app-bar/_variables.scss","webpack://node_modules/@material/typography/_typography.scss","webpack://node_modules/@material/rtl/_rtl.scss","webpack://node_modules/@material/elevation/_elevation-theme.scss","webpack://../dr-comp-package/doc-app/doc-ui-common/client/material/TopAppBar.scss","webpack://../dr-comp-package/doc-app/doc-ui-common/client/animation/SwitchAnim.module.scss","webpack://../dr-comp-package/doc-app/doc-ui-common/client/components/layout/MediaMatch.module.scss","webpack://node_modules/@material/layout-grid/_mixins.scss","webpack://../dr-comp-package/doc-app/doc-ui-common/client/animation/AnimatableRoutes.module.scss"],"names":[],"mappings":"AAAA,KACE,yEAAA,CAIF,EACE,qBAAA,CAGF,UAEE,QAAA,CACA,WAAA,CACA,kCAAA,CACA,4BAAA,CACA,mJAAA,CAGA,iBAAA,CACA,cAAA,CAEA,cACE,QAAA,CACA,SAAA,CACA,WAAA,CACA,uCAAA,CACA,gCAAA,CAEF,gEAGE,qBAAA,CACA,cAAA,CAEF,wBACE,YAAA,CAEF,gDACE,WAAA,CAEF,4CACE,YAAA,CAIF,6BACE,SAAA,CACA,UAAA,CACF,6BAAA,CAED,mCACC,eAAA,CC/CA,iCAGE,4CAAA,CACA,8BAAA,CACA,4DAAA,CACA,6DACE,oCAAA,CACA,6CAAA,CACA,kCAAA,CAAA,0BAAA,CAGJ,+BACE,QAAA,CACA,YAAA,CACA,qBAAA,CAMJ,4BACE,WAAA,CAEF,4BACE,WAAA,CACA,qBAAA,CACA,YAAA,CACA,uBAAA,CAEF,6BACE,WAAA,CAEA,YAAA,CACA,mBAAA,CACA,aAAA,CACA,8CACE,WAAA,CACA,QAAA,CAGJ,uCACE,iBAAA,CAGA,0EACE,iBAAA,CACA,WAAA,CAEA,KAAA,CAGJ,yBACE,gEAAA,CACA,cAAA,CACA,iBAAA,CClCA,uEACE,GACE,uBAAA,CAGF,IACE,oEAAA,CAAA,4DAAA,CACA,uBAAA,CAGF,OACE,2EAAA,CAAA,mEAAA,CC0CF,+BAAA,CAAA,uEAAA,CD5BA,GC4BA,iCAAA,CAAA,yEAAA,CAAA,CDrDF,+DACE,GACE,uBAAA,CAGF,IACE,oEAAA,CAAA,4DAAA,CACA,uBAAA,CAGF,OACE,2EAAA,CAAA,mEAAA,CC0CF,+BAAA,CAAA,uEAAA,CD5BA,GC4BA,iCAAA,CAAA,yEAAA,CAAA,CDjBF,mEACE,GACE,qBAAA,CAGF,OACE,wEAAA,CAAA,gEAAA,CACA,qBAAA,CAGF,OACE,4DAAA,CAAA,oDAAA,CACA,yBAAA,CAGF,GACE,qBAAA,CAAA,CAhBJ,2DACE,GACE,qBAAA,CAGF,OACE,wEAAA,CAAA,gEAAA,CACA,qBAAA,CAGF,OACE,4DAAA,CAAA,oDAAA,CACA,yBAAA,CAGF,GACE,qBAAA,CAAA,CAMJ,yEACE,GACE,qEAAA,CAAA,6DAAA,CACA,uBAAA,CAGF,IACE,yEAAA,CAAA,iEAAA,CCZF,gCAAA,CAAA,6EAAA,CDoBA,OACE,qEAAA,CAAA,6DAAA,CCrBF,gCAAA,CAAA,0EAAA,CD6BA,GC7BA,iCAAA,CAAA,2EAAA,CAAA,CDKF,iEACE,GACE,qEAAA,CAAA,6DAAA,CACA,uBAAA,CAGF,IACE,yEAAA,CAAA,iEAAA,CCZF,gCAAA,CAAA,6EAAA,CDoBA,OACE,qEAAA,CAAA,6DAAA,CCrBF,gCAAA,CAAA,0EAAA,CD6BA,GC7BA,iCAAA,CAAA,2EAAA,CAAA,CDwCF,qEACE,GACE,8EAAA,CAAA,sEAAA,CAMA,qBAAA,CAGF,OACE,gFAAA,CAAA,wEAAA,CAMA,yBAAA,CAGF,OACE,gFAAA,CAAA,wEAAA,CAMA,wBAAA,CAGF,GACE,qBAAA,CAAA,CAhCJ,6DACE,GACE,8EAAA,CAAA,sEAAA,CAMA,qBAAA,CAGF,OACE,gFAAA,CAAA,wEAAA,CAMA,yBAAA,CAGF,OACE,gFAAA,CAAA,wEAAA,CAMA,wBAAA,CAGF,GACE,qBAAA,CAAA,CAMJ,iDACE,GAIE,0CAAA,CAAA,CALJ,yCACE,GAIE,0CAAA,CAAA,CAMJ,+EACE,GACE,uBAAA,CAGF,IACE,oEAAA,CAAA,4DAAA,CACA,uBAAA,CAGF,OACE,2EAAA,CAAA,mEAAA,CCpGF,gCAAA,CAAA,4EAAA,CDiHA,GCjHA,kCAAA,CAAA,8EAAA,CAAA,CDyFF,uEACE,GACE,uBAAA,CAGF,IACE,oEAAA,CAAA,4DAAA,CACA,uBAAA,CAGF,OACE,2EAAA,CAAA,mEAAA,CCpGF,gCAAA,CAAA,4EAAA,CDiHA,GCjHA,kCAAA,CAAA,8EAAA,CAAA,CD4HF,iFACE,GACE,qEAAA,CAAA,6DAAA,CACA,uBAAA,CAGF,IACE,yEAAA,CAAA,iEAAA,CCnIF,iCAAA,CAAA,kFAAA,CD2IA,OACE,qEAAA,CAAA,6DAAA,CC5IF,iCAAA,CAAA,+EAAA,CDoJA,GCpJA,kCAAA,CAAA,gFAAA,CAAA,CD4HF,yEACE,GACE,qEAAA,CAAA,6DAAA,CACA,uBAAA,CAGF,IACE,yEAAA,CAAA,iEAAA,CCnIF,iCAAA,CAAA,kFAAA,CD2IA,OACE,qEAAA,CAAA,6DAAA,CC5IF,iCAAA,CAAA,+EAAA,CDoJA,GCpJA,kCAAA,CAAA,gFAAA,CAAA,CD+JF,yDACE,GACE,2BAAA,CAAA,CAFJ,iDACE,GACE,2BAAA,CAAA,CE1LJ,qBAEI,iBAAA,CACA,UAAA,CACA,UCpCG,CDqCH,uBAAA,CAEA,+BAAA,CACA,eAAA,CAIA,mDAAA,CAGF,0BAII,WAAA,CAEA,yBAAA,CAIA,qDAAA,CAIJ,0DAZI,iBAAA,CACA,UAAA,CAEA,sBAAA,CAAA,cAiBA,CARJ,gCAEI,oBAAA,CAMA,oBAAA,CAIJ,6BAEI,YAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CAIJ,kCAEI,0BAAA,CACA,wBAAA,CACA,SAAA,CACA,wBAAA,CAIA,oEAAA,CAAA,4DAAA,CAIJ,iCAEI,aAAA,CAIA,sDAAA,CAIJ,kCAEI,mBAAA,CAIJ,oCAEI,YAAA,CA0FJ,8DAEI,eAAA,CAIJ,sEAEI,iBAAA,CAIJ,wEAEI,gBAAA,CACA,aAAA,CAKF,2GAEI,wFAAA,CAAA,gFAAA,CAIF,2IAEI,oFAAA,CAAA,4EAAA,CAMN,6GAEI,0FAAA,CAAA,kFAAA,CAIF,6IAEI,sFAAA,CAAA,8EAAA,CAaV,+IAGI,OAAA,CAIA,6BAAA,CAKF,yOAEI,kFAAA,CAAA,0EAAA,CAIJ,6OAEI,oFAAA,CAAA,4EAAA,CAKN,+JAEI,4EAAA,CAAA,oEAAA,CAIA,mBAAA,CAKF,qOAGI,kBAAA,CAEA,SAAA,CAIJ,yOAGI,iBAAA,CAEA,SAAA,CArLJ,6BAEI,SAAA,CAYA,6TAGI,sBAAA,CAAA,cAAA,CAgBV,gCDvGE,oBAAA,CAAA,6CAAA,CC0HF,kCAII,oNAAA,CAIJ,iCAEI,wBAlBkB,CE/JxB,iBH6CI,wBAAA,CAAA,iDAAA,CAAA,UAAA,CGzCF,YAAA,CACA,cAAA,CACA,qBAAA,CACA,6BAAA,CACA,qBAAA,CACA,UAAA,CACA,SAAA,CCWA,kGJwBE,aAAA,CAAA,yCAAA,CKiDA,8NLjDA,wBAAA,CAAA,4EAAA,CKqHA,gSLrHA,WAAA,CAAA,2CAAA,CK4JE,gXAsBA,wBAAA,CLlLF,WAAA,CAAA,2CAAA,CK4ME,kKAEI,8BAAA,CAKF,gLAEI,wBA3PO,CLsCf,WAAA,CAAA,2CAAA,CKgOA,0ILhOA,4DAAA,CGjCF,sBACE,YAAA,CACA,iBAAA,CACA,qBAAA,CACA,UAAA,CACA,WG3BS,CH8BX,0BACE,mBAAA,CACA,aAAA,CACA,kBAAA,CACA,WAAA,CACA,gBAAA,CAEA,SAAA,CAEA,uCACE,0BAAA,CACA,QAAA,CAGF,qCACE,wBAAA,CACA,OAAA,CAIJ,wBIkPE,iCAAA,CACA,kCAAA,CP9OA,6BAAA,CAAA,2GAAA,CAAA,iBAAA,CAAA,2DAAA,CAAA,gBAAA,CAAA,4DAAA,CAAA,eAAA,CAAA,2DAAA,CAAA,sBAAA,CAAA,qEAAA,CAAA,uBAAA,CAAA,+EAAA,CAAA,uEAAA,CAAA,sBAAA,CAAA,qEAAA,CAAA,iBAAA,CAAA,eAAA,CGGA,sBAAA,CACA,kBAAA,CACA,eAAA,CACA,SAAA,CKFE,mERJF,cAAA,CAAA,kBAAA,CIJF,kCJIE,wBAAA,CAAA,yBAAA,CAAA,+BAAA,CAAA,2BAAA,CQIE,uFRJF,wBAAA,CAAA,yBAAA,CAAA,4BAAA,CAAA,8BAAA,CGcJ,wBACE,KAAA,CAEA,UAAA,CAEA,MAAA,CACA,UAAA,CACA,6CAAA,CKjBI,mELqBF,OAAA,CAEA,SAAA,CAGF,8CACE,WG9EgB,CHiFlB,kDACE,WGjFqB,CHoFvB,gDACE,8CAAA,CAEA,SAAA,CAIJ,kCMoKM,iGAqGS,CNtQb,UG1FsB,CH2FtB,4CAAA,CAEA,0DACE,YAAA,CAGF,gEACE,+CAAA,CAMJ,yEACE,WAAA,CAEA,8GHjEE,cAAA,CAAA,kBAAA,CQIE,+ORJF,iBAAA,CAAA,eAAA,CGuEF,8CACE,WGvGe,CH0GjB,kDACE,aAAA,CAGF,gDH/EE,iBAAA,CAAA,eAAA,CQIE,mHRJF,cAAA,CAAA,kBAAA,CGyFF,kDACE,YGhImB,CHmIrB,oDACE,mBAAA,CACA,kBGpI6B,CHuI/B,wHAEE,qBAAA,CAKJ,wBACE,gCAAA,CAGF,iCMoGM,iGAqGS,CNtMb,gCAAA,CAMA,yEACE,WAAA,CAGF,6EACE,cAAA,CAGF,2EH9HE,iBAAA,CAAA,eAAA,CGqIA,kBG/JmC,CE8BjC,yKRJF,cAAA,CAAA,kBAAA,CG0IJ,+BACE,gBGlMW,CHqMb,qCACE,gBG9KiB,CHiLnB,qCACE,gBGlMkB,CHqMpB,yCACE,iBG7LqB,CHgMvB,+CACE,gBAAA,CCjJA,wBACE,sBACE,WE3Dc,CF8DhB,0BACE,WE9DmB,CFiErB,wBACE,4CAAA,CAIF,kCACE,6CAAA,CAGA,uEJ5BF,cAAA,CAAA,kBAAA,CQIE,iKRJF,iBAAA,CAAA,eAAA,CIsCE,oDACE,kBEzEgC,CF6EpC,+BACE,gBE3Fc,CAAA,CI5BpB,iBAEE,SAAA,CCFF,yBACE,iBAAA,CACA,gDACE,YAAA,CACA,qBAAA,CACA,6EACE,QAAA,CAIF,yFACE,SAAA,CAEA,6BAAA,CACA,cAAA,CAEA,oHACE,cAAA,CACA,SAAA,CAKJ,sFACE,iBAAA,CACA,cAAA,CACA,6BAAA,CACA,SAAA,CAMN,8BACE,SAAA,CACA,gCAAA,CACA,oDAJW,CAMX,yDAGE,uBAAA,CACA,SAAA,CAKJ,2BACE,iBAAA,CAEA,iCAAA,CACA,oDAnBW,CAqBX,SAAA,CCnDF,8BAEE,iBAAA,CACA,iBAAA,CC4DE,wBDzDE,qCACE,iBAAA,CAAA,CCmDJ,6CDpDE,qCACE,gBAAA,CAAA,CC8CJ,wBD/CE,qCACE,eAAA,CAAA,CEZR,+BACE,QAAA,CACA,mBAAA","file":"main.850c63b9.chunk.css","sourcesContent":["code {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 0;\n  height: 100%;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: auto;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n  'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n  sans-serif;\n  position: relative;\n  cursor: default;\n\n  * {\n    margin: 0;\n    padding: 0;\n    border: none;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-overflow-scrolling: touch;\n  }\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n    cursor: inherit;\n  }\n  *:focus {\n    outline: none;\n  }\n  *::-moz-focus-inner {\n    border: none;\n  }\n  *::-moz-focusring {\n    outline: none;\n  }\n}\n@mixin webkit-scrollbar {\n  &::-webkit-scrollbar {\n    width: 3px;\n    height: 3px;\n\t\tbackground: rgba(255,255,255,0.4);\n\t}\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground: hsl(1, 0%, 80%);\n\t}\n}\n.windows {\n  * {\n    @include webkit-scrollbar();\n  }\n}\n","@use 'appLayout';\n@use '../material/theme.scss';\n\n.app-bar {\n  &-header {\n    // background: linear-gradient(to right, #EFEEDD 0%,white 100%);\n    // background-color: #e5e4d4!important;\n    background-color: rgba(255,255,255, 0)!important;\n    color: rgba(0,0,0,0.9)!important;\n    transition: box-shadow 0.2s linear, background-color 0.2s linear;\n    &.withShadow {\n      box-shadow: 0 2px 15px rgba(0,0,0,0.4);\n      background-color: rgba(255,255,255, 0.3)!important;\n      backdrop-filter: blur(20px);\n    }\n  }\n  &-main {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n}\n\n// https://github.com/css-modules/css-modules\n\n.container {\n  height: 100%;\n}\n.backLayer {\n  height: 100%;\n  flex-direction: column;\n  display: flex;\n  justify-content: stretch;\n}\n.frontLayer {\n  flex-grow: 1;\n  // padding: appLayout.$frontLayer-padding;\n  display: flex;\n  align-items: stretch;\n  overflow: auto;\n  > :global(.mdc-layout-grid) {\n    flex-grow: 1;\n    margin: 0;\n  }\n}\n.progressBarContainer {\n  position: relative;\n\n  // nested to override Material default style \"position\"\n  .routeProgressBar {\n    position: absolute;\n    z-index: 999;\n    // position: absolute !important;\n    top: 0;\n  }\n}\n.footer {\n  background: linear-gradient(to right, transparent 0%, rgba(0,0,0,0.1) 100%);\n  padding: 1.5rem;\n  text-align: center;\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n\n@mixin primary-indeterminate-translate-keyframes_ {\n  @keyframes mdc-linear-progress-primary-indeterminate-translate {\n    0% {\n      transform: translateX(0);\n    }\n\n    20% {\n      animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n      transform: translateX(0);\n    }\n\n    59.15% {\n      animation-timing-function: cubic-bezier(\n        0.302435,\n        0.381352,\n        0.55,\n        0.956352\n      );\n\n      $primary-half: custom-properties.create(\n        --mdc-linear-progress-primary-half,\n        83.67142%\n      );\n      @include apply-translate_($primary-half);\n    }\n\n    100% {\n      $primary-full: custom-properties.create(\n        --mdc-linear-progress-primary-full,\n        200.611057%\n      );\n      @include apply-translate_($primary-full);\n    }\n  }\n}\n\n@mixin primary-indeterminate-scale-keyframes_ {\n  @keyframes mdc-linear-progress-primary-indeterminate-scale {\n    0% {\n      transform: scaleX(0.08);\n    }\n\n    36.65% {\n      animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1);\n      transform: scaleX(0.08);\n    }\n\n    69.15% {\n      animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);\n      transform: scaleX(0.661479);\n    }\n\n    100% {\n      transform: scaleX(0.08);\n    }\n  }\n}\n\n@mixin secondary-indeterminate-translate-keyframes_ {\n  @keyframes mdc-linear-progress-secondary-indeterminate-translate {\n    0% {\n      animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);\n      transform: translateX(0);\n    }\n\n    25% {\n      animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);\n      $secondary-quarter: custom-properties.create(\n        --mdc-linear-progress-secondary-quarter,\n        37.651913%\n      );\n      @include apply-translate_($secondary-quarter);\n    }\n\n    48.35% {\n      animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);\n      $secondary-half: custom-properties.create(\n        --mdc-linear-progress-secondary-half,\n        84.386165%\n      );\n      @include apply-translate_($secondary-half);\n    }\n\n    100% {\n      $secondary-full: custom-properties.create(\n        --mdc-linear-progress-secondary-full,\n        160.277782%\n      );\n      @include apply-translate_($secondary-full);\n    }\n  }\n}\n\n@mixin secondary-indeterminate-scale-keyframes_ {\n  @keyframes mdc-linear-progress-secondary-indeterminate-scale {\n    0% {\n      animation-timing-function: cubic-bezier(\n        0.205028,\n        0.057051,\n        0.57661,\n        0.453971\n      );\n      transform: scaleX(0.08);\n    }\n\n    19.15% {\n      animation-timing-function: cubic-bezier(\n        0.152313,\n        0.196432,\n        0.648374,\n        1.004315\n      );\n      transform: scaleX(0.457104);\n    }\n\n    44.15% {\n      animation-timing-function: cubic-bezier(\n        0.257759,\n        -0.003163,\n        0.211762,\n        1.38179\n      );\n      transform: scaleX(0.72796);\n    }\n\n    100% {\n      transform: scaleX(0.08);\n    }\n  }\n}\n\n@mixin buffering-keyframes_ {\n  @keyframes mdc-linear-progress-buffering {\n    from {\n      // Normally the buffer dots start from the left and overflow to the right.\n      // We rotate by 180deg so that the buffer dots start on the right when\n      // in non-reversed mode and overflow to the left.\n      transform: rotate(180deg) translateX(-10px);\n    }\n  }\n}\n\n@mixin primary-indeterminate-translate-reverse-keyframes_ {\n  @keyframes mdc-linear-progress-primary-indeterminate-translate-reverse {\n    0% {\n      transform: translateX(0);\n    }\n\n    20% {\n      animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n      transform: translateX(0);\n    }\n\n    59.15% {\n      animation-timing-function: cubic-bezier(\n        0.302435,\n        0.381352,\n        0.55,\n        0.956352\n      );\n      $primary-half: custom-properties.create(\n        --mdc-linear-progress-primary-half-neg,\n        -83.67142%\n      );\n      @include apply-translate_($primary-half);\n    }\n\n    100% {\n      $primary-full: custom-properties.create(\n        --mdc-linear-progress-primary-full-neg,\n        -200.611057%\n      );\n      @include apply-translate_($primary-full);\n    }\n  }\n}\n\n@mixin secondary-indeterminate-translate-reverse-keyframes_ {\n  @keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse {\n    0% {\n      animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);\n      transform: translateX(0);\n    }\n\n    25% {\n      animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);\n      $secondary-quarter: custom-properties.create(\n        --mdc-linear-progress-secondary-quarter-neg,\n        -37.651913%\n      );\n      @include apply-translate_($secondary-quarter);\n    }\n\n    48.35% {\n      animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);\n      $secondary-half: custom-properties.create(\n        --mdc-linear-progress-secondary-half-neg,\n        -84.386165%\n      );\n      @include apply-translate_($secondary-half);\n    }\n\n    100% {\n      $secondary-full: custom-properties.create(\n        --mdc-linear-progress-secondary-full-neg,\n        -160.277782%\n      );\n      @include apply-translate_($secondary-full);\n    }\n  }\n}\n\n@mixin buffering-reverse-keyframes_ {\n  @keyframes mdc-linear-progress-buffering-reverse {\n    from {\n      transform: translateX(-10px);\n    }\n  }\n}\n\n@mixin apply-translate_($value) {\n  @include theme.property(\n    transform,\n    translateX(value),\n    $replace: (value: $value)\n  );\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// stylelint-disable no-unknown-animations --\n// Animations keyframes are included in `keyframes.scss`.\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:string';\n@use '@material/animation/functions' as animation-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use './variables';\n@use './keyframes';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @include keyframes.primary-indeterminate-translate-keyframes_;\n    @include keyframes.primary-indeterminate-scale-keyframes_;\n    @include keyframes.secondary-indeterminate-translate-keyframes_;\n    @include keyframes.secondary-indeterminate-scale-keyframes_;\n    @include keyframes.buffering-keyframes_;\n    @include keyframes.primary-indeterminate-translate-reverse-keyframes_;\n    @include keyframes.secondary-indeterminate-translate-reverse-keyframes_;\n    @include keyframes.buffering-reverse-keyframes_;\n  }\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n      width: 100%;\n      height: variables.$height;\n      transform: translateZ(0);\n      // Create a border around the bar in Windows High Contrast Mode.\n      outline: 1px solid transparent;\n      overflow: hidden;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation-functions.exit-temporary(opacity, 250ms);\n    }\n\n    &__bar {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        animation: none;\n        transform-origin: top left;\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: animation-functions.exit-temporary(transform, 250ms);\n      }\n    }\n\n    &__bar-inner {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: absolute;\n        width: 100%;\n        animation: none;\n        // border-top is used rather than background-color to ensure that the\n        // bar is visible in Windows High Contrast Mode.\n        border-top: variables.$height solid;\n      }\n    }\n\n    &__buffer {\n      @include feature-targeting.targets($feat-structure) {\n        display: flex;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n      }\n    }\n\n    &__buffer-dots {\n      @include feature-targeting.targets($feat-structure) {\n        background-repeat: repeat-x;\n        background-size: 10px variables.$height;\n        flex: auto;\n        transform: rotate(180deg);\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-linear-progress-buffering 250ms infinite linear;\n      }\n    }\n\n    &__buffer-bar {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 1 100%;\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: animation-functions.exit-temporary(flex-basis, 250ms);\n      }\n    }\n\n    &__primary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scaleX(0);\n      }\n    }\n\n    &__secondary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n\n    @include indeterminate_($query: $query);\n\n    @include rtl.rtl() {\n      // The rtl() mixin does not account for nested `dir` attributes. Set\n      // `dir` attribute on root to take highest priority.\n      &:not([dir='ltr']) {\n        @include _rtl-styles($query: $query);\n      }\n    }\n\n    &--closed {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n\n    &--closed-animation-off {\n      .mdc-linear-progress__buffer-dots {\n        @include feature-targeting.targets($feat-animation) {\n          animation: none;\n        }\n      }\n\n      &.mdc-linear-progress--indeterminate {\n        .mdc-linear-progress__bar,\n        .mdc-linear-progress__bar .mdc-linear-progress__bar-inner {\n          @include feature-targeting.targets($feat-animation) {\n            animation: none;\n          }\n        }\n      }\n    }\n  }\n\n  @at-root {\n    @include bar-color(primary, $query: $query);\n    @include buffer-color(variables.$baseline-buffer-color, $query: $query);\n  }\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $color-value-for-css: theme-color.prop-value($color);\n  $color-value-for-svg: str-replace_(\n    string.unquote('#{$color-value-for-css}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n      // stylelint-disable-next-line function-url-quotes\n      background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='#{$color-value-for-svg}'/%3E%3C/svg%3E\");\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      background-color: $color-value-for-css;\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin indeterminate_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  &--indeterminate {\n    .mdc-linear-progress__bar {\n      @include feature-targeting.targets($feat-structure) {\n        transition: none;\n      }\n    }\n\n    .mdc-linear-progress__primary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        left: -145.166611%;\n      }\n    }\n\n    .mdc-linear-progress__secondary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        left: -54.888891%;\n        display: block;\n      }\n    }\n\n    &.mdc-linear-progress--animation-ready {\n      .mdc-linear-progress__primary-bar {\n        @include feature-targeting.targets($feat-animation) {\n          animation: mdc-linear-progress-primary-indeterminate-translate 2s\n            infinite linear;\n        }\n\n        > .mdc-linear-progress__bar-inner {\n          @include feature-targeting.targets($feat-animation) {\n            animation: mdc-linear-progress-primary-indeterminate-scale 2s\n              infinite linear;\n          }\n        }\n      }\n\n      .mdc-linear-progress__secondary-bar {\n        @include feature-targeting.targets($feat-animation) {\n          animation: mdc-linear-progress-secondary-indeterminate-translate 2s\n            infinite linear;\n        }\n\n        > .mdc-linear-progress__bar-inner {\n          @include feature-targeting.targets($feat-animation) {\n            animation: mdc-linear-progress-secondary-indeterminate-scale 2s\n              infinite linear;\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin _rtl-styles($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-linear-progress__bar {\n    @include feature-targeting.targets($feat-structure) {\n      /* @noflip */\n      right: 0;\n      /* @noflip */\n      -webkit-transform-origin: center right;\n      /* @noflip */\n      transform-origin: center right;\n    }\n  }\n\n  &.mdc-linear-progress--animation-ready {\n    .mdc-linear-progress__primary-bar {\n      @include feature-targeting.targets($feat-animation) {\n        animation-name: mdc-linear-progress-primary-indeterminate-translate-reverse;\n      }\n    }\n\n    .mdc-linear-progress__secondary-bar {\n      @include feature-targeting.targets($feat-animation) {\n        animation-name: mdc-linear-progress-secondary-indeterminate-translate-reverse;\n      }\n    }\n  }\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-linear-progress-buffering-reverse 250ms infinite linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      transform: rotate(0);\n    }\n  }\n\n  &.mdc-linear-progress--indeterminate {\n    .mdc-linear-progress__primary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        /* @noflip */\n        right: -145.166611%;\n        /* @noflip */\n        left: auto;\n      }\n    }\n\n    .mdc-linear-progress__secondary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        /* @noflip */\n        right: -54.888891%;\n        /* @noflip */\n        left: auto;\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/typography/typography';\n@use './mixins';\n@use './variables';\n\n// postcss-bem-linter: define top-app-bar\n.mdc-top-app-bar {\n  @include mixins.fill-color-accessible(primary);\n  @include mixins.icon-ink-color(on-primary);\n\n  display: flex;\n  position: fixed;\n  flex-direction: column;\n  justify-content: space-between;\n  box-sizing: border-box;\n  width: 100%;\n  z-index: 4;\n\n  &__row {\n    display: flex;\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    height: variables.$row-height;\n  }\n\n  &__section {\n    display: inline-flex;\n    flex: 1 1 auto;\n    align-items: center;\n    min-width: 0;\n    padding: variables.$section-vertical-padding\n      variables.$section-horizontal-padding;\n    z-index: 1;\n\n    &--align-start {\n      justify-content: flex-start;\n      order: -1;\n    }\n\n    &--align-end {\n      justify-content: flex-end;\n      order: 1;\n    }\n  }\n\n  &__title {\n    @include typography.typography(headline6);\n    @include rtl-mixins.reflexive-box(\n      padding,\n      left,\n      variables.$title-left-padding\n    );\n\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    z-index: 1;\n  }\n}\n\n@at-root {\n  @include mixins.short-shape-radius(24px);\n}\n\n.mdc-top-app-bar--short {\n  top: 0;\n  /* @noflip */\n  right: auto;\n  /* @noflip */\n  left: 0;\n  width: 100%;\n  transition: width 250ms animation-variables.$standard-curve-timing-function;\n\n  @include rtl-mixins.rtl {\n    /* @noflip */\n    right: 0;\n    /* @noflip */\n    left: auto;\n  }\n\n  .mdc-top-app-bar__row {\n    height: variables.$mobile-row-height;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: variables.$mobile-section-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    transition: opacity 200ms\n      animation-variables.$standard-curve-timing-function;\n    opacity: 1;\n  }\n}\n\n.mdc-top-app-bar--short-collapsed {\n  @include elevation-mixins.elevation(4);\n\n  width: variables.$short-collapsed-width;\n  transition: width 300ms animation-variables.$standard-curve-timing-function;\n\n  .mdc-top-app-bar__title {\n    display: none;\n  }\n\n  .mdc-top-app-bar__action-item {\n    transition: padding 150ms\n      animation-variables.$standard-curve-timing-function;\n  }\n}\n\n// stylelint-disable-next-line plugin/selector-bem-pattern\n.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item {\n  width: variables.$short-collapsed-width * 2;\n\n  .mdc-top-app-bar__section--align-end {\n    @include rtl-mixins.reflexive-box(padding, right, 12px);\n  }\n}\n\n.mdc-top-app-bar--dense {\n  .mdc-top-app-bar__row {\n    height: variables.$dense-row-height;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: 0 variables.$dense-section-horizontal-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    @include rtl-mixins.reflexive-box(\n      padding,\n      left,\n      variables.$dense-title-left-padding\n    );\n  }\n}\n\n.mdc-top-app-bar--prominent {\n  .mdc-top-app-bar__row {\n    height: variables.$prominent-row-height;\n  }\n\n  .mdc-top-app-bar__title {\n    align-self: flex-end;\n    padding-bottom: variables.$prominent-title-bottom-padding;\n  }\n\n  .mdc-top-app-bar__action-item,\n  .mdc-top-app-bar__navigation-icon {\n    align-self: flex-start;\n  }\n}\n\n// stylelint-disable-next-line plugin/selector-bem-pattern\n.mdc-top-app-bar--fixed {\n  transition: box-shadow 200ms linear;\n}\n\n.mdc-top-app-bar--fixed-scrolled {\n  @include elevation-mixins.elevation(4);\n\n  transition: box-shadow 200ms linear;\n}\n\n// Specific styles for dense and prominent styled top app bar\n// stylelint-disable plugin/selector-bem-pattern\n.mdc-top-app-bar--dense.mdc-top-app-bar--prominent {\n  .mdc-top-app-bar__row {\n    height: variables.$dense-row-height * 2;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: 0 variables.$section-horizontal-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    @include rtl-mixins.reflexive-box(\n      padding,\n      left,\n      variables.$title-left-padding\n    );\n\n    padding-bottom: variables.$dense-prominent-title-bottom-padding;\n  }\n}\n// stylelint-enable plugin/selector-bem-pattern\n\n.mdc-top-app-bar--fixed-adjust {\n  padding-top: variables.$row-height;\n}\n\n.mdc-top-app-bar--dense-fixed-adjust {\n  padding-top: variables.$dense-row-height;\n}\n\n.mdc-top-app-bar--short-fixed-adjust {\n  padding-top: variables.$mobile-row-height;\n}\n\n.mdc-top-app-bar--prominent-fixed-adjust {\n  padding-top: variables.$prominent-row-height;\n}\n\n.mdc-top-app-bar--dense-prominent-fixed-adjust {\n  padding-top: variables.$dense-row-height * 2;\n}\n\n// Mobile Styles\n@include mixins.mobile-breakpoint_;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions';\n@use './variables';\n@use '@material/rtl/mixins' as rtl-mixins;\n\n//\n// Public\n//\n\n@mixin ink-color($color) {\n  @include theme.property(color, $color);\n}\n\n@mixin fill-color($color) {\n  @include theme.property(background-color, $color);\n}\n\n@mixin fill-color-accessible($color) {\n  @include fill-color($color);\n  @include ink-color(theme-color.accessible-ink-color($color));\n}\n\n@mixin icon-ink-color($color) {\n  .mdc-top-app-bar__action-item,\n  .mdc-top-app-bar__navigation-icon {\n    @include theme.property(color, $color);\n    @include ripple-theme.states($color);\n  }\n}\n\n@mixin short-shape-radius($radius, $rtl-reflexive: true) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 1 {\n    @error \"Invalid radius: '#{$radius}' component doesn't allow customizing all corners\";\n  }\n\n  $radius: 0 0 $radius 0;\n\n  $selector: if(\n    &,\n    '&.mdc-top-app-bar--short-collapsed',\n    '.mdc-top-app-bar--short-collapsed'\n  );\n\n  #{$selector} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: variables.$dense-row-height\n    );\n  }\n}\n\n//\n// Private\n//\n\n@mixin mobile-breakpoint_($mobile-breakpoint: variables.$mobile-breakpoint) {\n  @media (max-width: $mobile-breakpoint) {\n    .mdc-top-app-bar__row {\n      height: variables.$mobile-row-height;\n    }\n\n    .mdc-top-app-bar__section {\n      padding: variables.$mobile-section-padding;\n    }\n\n    .mdc-top-app-bar--short {\n      transition: width 200ms\n        animation-variables.$standard-curve-timing-function;\n    }\n\n    .mdc-top-app-bar--short-collapsed {\n      transition: width 250ms\n        animation-variables.$standard-curve-timing-function;\n\n      .mdc-top-app-bar__section--align-end {\n        @include rtl-mixins.reflexive-box(\n          padding,\n          right,\n          variables.$short-collapsed-right-icon-padding\n        );\n      }\n    }\n\n    .mdc-top-app-bar--prominent {\n      .mdc-top-app-bar__title {\n        padding-bottom: variables.$prominent-mobile-title-bottom-padding;\n      }\n    }\n\n    .mdc-top-app-bar--fixed-adjust {\n      padding-top: variables.$mobile-row-height;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n@mixin theme-styles($theme) {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include states-base-color(map.get($theme, hover-state-layer-color));\n  @include states-hover-opacity(map.get($theme, hover-state-layer-opacity));\n  @include states-focus-opacity(map.get($theme, focus-state-layer-opacity));\n  @include states-press-opacity(map.get($theme, pressed-state-layer-opacity));\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @if color.alpha(theme-color.prop-value($color)) > 0 {\n          @include theme.property(background-color, $color);\n        } @else {\n          // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n          // This avoids unnecessary transitions and overflow.\n          content: none;\n        }\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin active() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Default styles\n$row-height: 64px !default;\n$title-left-padding: 20px !default;\n$section-vertical-padding: 8px !default;\n$section-horizontal-padding: 12px !default;\n\n$mobile-breakpoint: 599px !default;\n\n// Default mobile styles\n$mobile-row-height: 56px !default;\n$mobile-section-padding: 4px !default;\n\n// Short top app bar\n$short-collapsed-border-radius: 4px !default;\n$short-collapsed-width: 56px !default;\n$short-collapsed-right-icon-padding: 12px !default;\n\n// Prominent styles\n$prominent-row-height: 128px !default;\n$prominent-title-bottom-padding: 2px !default;\n\n// Prominent mobile styles\n$prominent-mobile-title-bottom-padding: 6px !default;\n\n// Dense styles\n$dense-row-height: 48px !default;\n$dense-section-horizontal-padding: 4px !default;\n$dense-title-left-padding: 12px !default;\n\n// Dense & Prominent styles\n$dense-prominent-title-bottom-padding: 9px !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/theme';\n@use '@material/theme/selector-ext';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        @content;\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n///\n/// Creates a box-shadow from the Material elevation system.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @param {Number} $opacity-boost [0] - optional opacity boost for the shadow.\n/// @return {List} the complete box shadow.\n///\n@function _box-shadow($level, $color, $opacity-boost: 0) {\n  $color: theme-color.prop-value($color);\n  $umbra-z-value: map.get($umbra-map, $level);\n  $penumbra-z-value: map.get($penumbra-map, $level);\n  $ambient-z-value: map.get($ambient-map, $level);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  @return (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  @return _box-shadow($z-value, $color, $opacity-boost);\n}\n\n///\n/// Returns a shadow or null if params are invalid.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color [#000] - the color of the shadow.\n/// @return {List|null} the complete box shadow or null.\n///\n@function _shadow($level, $color: #000) {\n  @if $level == null or $level < 0 or $level > 24 {\n    @warn \"$level must be between 0 and 24; received '#{$level}'\";\n    @return null;\n  }\n\n  @if $color == null {\n    @warn \"no $color provided; received '#{$color}'\";\n    @return null;\n  }\n\n  @return _box-shadow($level, $color);\n}\n\n@function get-elevation($level) {\n  @return (box-shadow: elevation-box-shadow($level));\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin _box-shadow($shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(box-shadow, $shadow);\n  }\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if custom-properties.is-custom-prop($box-shadow) {\n      // TODO(b/185188458): Use theme.property() once resolved.\n      $fallback: custom-properties.get-fallback($box-shadow);\n\n      // var(--<box-shadow-prop>, var(--m-elevation-box-shadow-for-gss))\n      $gss-custom-prop: custom-properties.create(\n        custom-properties.get-varname($box-shadow),\n        custom-properties.create(elevation-box-shadow-for-gss)\n      );\n\n      $value: custom-properties.create-var($gss-custom-prop);\n      @if $value == null {\n        // Custom properties are disabled, since $gss-custom-prop\n        // does not have a fallback. Avoid emitting two non-custom\n        // prop declarations by setting $fallback to null.\n        $value: $fallback;\n        $fallback: null;\n      }\n\n      @include css.declaration(box-shadow, $value, $fallback-value: $fallback);\n      @include custom-properties.declaration(\n        custom-properties.create(elevation-box-shadow-for-gss, $fallback)\n      );\n    } @else {\n      /* @alternate */\n      box-shadow: $box-shadow;\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        /* @noflip */\n        left: 0;\n      } @else {\n        top: 50%;\n        /* @noflip */\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Applies the given color to the container of the overlay.\n/// @param {color} $color - the color of the overlay container\n///\n@mixin _overlay-container-color($color, $query: feature-targeting.all()) {\n  .mdc-elevation-overlay {\n    @include overlay-fill-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n\n///\n/// Represents the configurable values of the elevation theme.\n///\n$_theme-values: (\n  shadow: null,\n  overlay-opacity: null,\n  overlay-color: null,\n);\n\n///\n/// Applies the shadow theme with the given $resolver function.\n/// @param {Function} $resolver - a function that returns a valid theme config.\n///   @see resolver for an example and expected arguments and return value.\n/// Accepts the following optional keyword args:\n/// @param {Number} $elevation - the level in the elevation system.\n/// @param {String} $shadow-color - the color used for the shadow.\n///\n@mixin with-resolver($resolver, $query: feature-targeting.all(), $args...) {\n  @if $resolver {\n    @include _theme(meta.call($resolver, $args...), $query: $query);\n  }\n}\n\n///\n/// Applies the given theme with validation.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin theme($theme: (), $query: feature-targeting.all()) {\n  @include theme.validate-keys($_theme-values, $theme);\n  @include _theme($theme, $query: $query);\n}\n\n///\n/// Applies the given theme.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin _theme($theme: (), $query: feature-targeting.all()) {\n  @include shadow(map.get($theme, shadow), $query: $query);\n  @include overlay-opacity(map.get($theme, overlay-opacity), $query: $query);\n  @include _overlay-container-color(\n    map.get($theme, overlay-color),\n    $query: $query\n  );\n}\n\n///\n/// Transforms the following optional parameters into a theme config.\n/// @param {Number} $elevation - the level of the elevation system in Material.\n/// @param {String} $shadow-color - the color to be used by the shadow.\n/// @return {Map} @see $_theme-values for accepted theme properties.\n///\n@function resolver($args...) {\n  $opts: meta.keywords($args);\n  $elevation: map.get($opts, elevation);\n  $shadow-color: map.get($opts, shadow-color);\n  @if custom-properties.is-custom-prop($elevation) {\n    @return _resolve-custom-props($elevation, $shadow-color);\n  }\n\n  @return (shadow: _shadow($elevation, $shadow-color));\n}\n\n@function _resolve-custom-props($elevation, $shadow-color) {\n  $fallback-dp: custom-properties.get-fallback($elevation);\n  $fallback-shadow-color: custom-properties.get-fallback($shadow-color);\n  $shadow: custom-properties.set-fallback(\n    $elevation,\n    _shadow($fallback-dp, $fallback-shadow-color)\n  );\n  @return (shadow: $shadow);\n}\n","@use \"theme\";\n@use \"@material/top-app-bar/mdc-top-app-bar\";\n\n.mdc-top-app-bar {\n  // position: absolute;\n  z-index: 7;\n}\n","\n$anim-duration: 0.4s;\n\n.scope {\n  position: relative;\n  &.full {\n    display: flex;\n    flex-direction: column;\n    .movingBox {\n      flex: 1;\n    }\n  }\n  &.animate-opacity {\n    .enterStart {\n      opacity: 0;\n      // will-change: opacity;\n      transition: opacity linear $anim-duration;\n      transform: none;\n\n      &.entering {\n        transform: none;\n        opacity: 1;\n      }\n    }\n\n    // https://github.com/css-modules/css-modules\n    .leaving {\n      position: absolute;\n      transform: none;\n      transition: opacity linear $anim-duration;\n      opacity: 0;\n    }\n  }\n}\n\n$transition: opacity linear $anim-duration, transform ease-out $anim-duration;\n.enterStart {\n  opacity: 0;\n  transform: translate3d(0, 100px, 0);\n  transition: $transition;\n  // will-change: opacity, transform;\n  &.entering {\n    // opacity: 0;\n    // display: none;\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n}\n\n// https://github.com/css-modules/css-modules\n.leaving {\n  position: absolute;\n  // will-change: opacity, transform;\n  transform: translate3d(0, -100px, 0);\n  transition: $transition;\n  // overflow: hidden;\n  opacity: 0;\n}\n","\n@use '@material/layout-grid/variables' as gridVar;\n@use 'sass:map';\n@use '@material/layout-grid/mixins' as gridMixin;\n\n.MediaMatch {\n  // display: none;\n  visibility: hidden;\n  position: absolute;\n  @each $size in map.keys(gridVar.$columns) {\n    @include gridMixin.media-query_($size) {\n      &::before {\n        content: \"#{$size}\";\n      }\n    }\n  }\n}\n\n// https://github.com/css-modules/css-modules\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use './variables';\n\n// returns the lower grid boundary or null if the smallest grid is selected\n@function breakpoint-min($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n  $min: map.get(variables.$breakpoints, $size);\n\n  @return if($min > 0, $min, null);\n}\n\n// returns the upper grid boundary or null if the largest grid is selected\n@function breakpoint-max($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n  $names: map.keys(variables.$columns);\n  $n: list.index($names, $size);\n  $prev: if($n > 1, list.nth($names, $n - 1), null);\n\n  @return if($prev, (breakpoint-min($prev) - 1px), null);\n}\n\n// Private mixins, meant for internal use.\n@mixin media-query_($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $min: breakpoint-min($size);\n  $max: breakpoint-max($size);\n\n  @if $min == null and $max != null {\n    // Phone\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max != null {\n    // Tablet\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    // Desktop\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    // Fallback - no breakpoints defined\n    @content;\n  }\n}\n\n@mixin cell-span_($size, $span, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $percent: math.percentage(\n    math.div($span, map.get(variables.$columns, $size))\n  );\n\n  @if $percent > 100% {\n    $percent: 100%;\n  }\n\n  width: calc(#{$percent} - #{$gutter});\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  width: calc(#{$percent} - var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}));\n\n  @supports (display: grid) {\n    width: auto;\n    grid-column-end: span math.min($span, map.get(variables.$columns, $size));\n  }\n}\n\n// Public mixins, meant for developer usage.\n@mixin layout-grid($size, $margin, $max-width: null) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  box-sizing: border-box;\n  margin: 0 auto;\n  padding: $margin;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  padding: var(--mdc-layout-grid-margin-#{$size}, #{$margin});\n\n  @if $max-width {\n    max-width: $max-width;\n  }\n}\n\n@mixin inner($size, $margin, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  display: flex;\n  flex-flow: row wrap;\n  align-items: stretch;\n  margin: math.div(-$gutter, 2);\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2 * -1);\n\n  @supports (display: grid) {\n    display: grid;\n    margin: 0;\n    grid-gap: $gutter;\n    // stylelint-disable-next-line declaration-block-no-duplicate-properties\n    grid-gap: var(--mdc-layout-grid-gutter-#{$size}, $gutter);\n    grid-template-columns: repeat(\n      map.get(variables.$columns, $size),\n      minmax(0, 1fr)\n    );\n  }\n}\n\n@mixin cell($size, $default-span, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  @include cell-span_($size, $default-span, $gutter);\n\n  box-sizing: border-box;\n  margin: math.div($gutter, 2);\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2);\n\n  @supports (display: grid) {\n    margin: 0;\n  }\n}\n\n@mixin cell-order($order) {\n  order: $order;\n}\n\n@mixin cell-align($position) {\n  @if $position == 'top' {\n    align-self: flex-start;\n\n    @supports (display: grid) {\n      align-self: start;\n    }\n  }\n\n  @if $position == 'middle' {\n    align-self: center;\n  }\n\n  @if $position == 'bottom' {\n    align-self: flex-end;\n\n    @supports (display: grid) {\n      align-self: end;\n    }\n  }\n\n  @if $position == 'stretch' {\n    align-self: stretch;\n  }\n}\n\n@mixin fixed-column-width($size, $margin, $gutter, $column-width) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $columnCount: map.get(variables.$columns, $size);\n  $gutter-number: $columnCount - 1;\n  $margin-number: 2;\n\n  width: $column-width * $columnCount + $gutter * $gutter-number + $margin *\n    $margin-number;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  width: calc(\n    var(--mdc-layout-grid-column-width-#{$size}, #{$column-width}) * #{$columnCount} +\n      var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) * #{$gutter-number} +\n      var(--mdc-layout-grid-margin-#{$size}, #{$margin}) * #{$margin-number}\n  );\n}\n",".scope {\n  flex: 1;\n  align-items: stretch;\n}\n"]}